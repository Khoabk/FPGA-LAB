|interface_for_switch_states
CLOCK_50 => CLOCK_50.IN1
KEY[0] => KEY[0].IN1
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN1
HEX0[0] << switch_states:uut.second1
HEX0[1] << switch_states:uut.second1
HEX0[2] << switch_states:uut.second1
HEX0[3] << switch_states:uut.second1
HEX0[4] << switch_states:uut.second1
HEX0[5] << switch_states:uut.second1
HEX0[6] << switch_states:uut.second1
HEX1[0] << switch_states:uut.second1
HEX1[1] << switch_states:uut.second1
HEX1[2] << switch_states:uut.second1
HEX1[3] << switch_states:uut.second1
HEX1[4] << switch_states:uut.second1
HEX1[5] << switch_states:uut.second1
HEX1[6] << switch_states:uut.second1
HEX2[0] << switch_states:uut.minute1
HEX2[1] << switch_states:uut.minute1
HEX2[2] << switch_states:uut.minute1
HEX2[3] << switch_states:uut.minute1
HEX2[4] << switch_states:uut.minute1
HEX2[5] << switch_states:uut.minute1
HEX2[6] << switch_states:uut.minute1
HEX3[0] << switch_states:uut.minute1
HEX3[1] << switch_states:uut.minute1
HEX3[2] << switch_states:uut.minute1
HEX3[3] << switch_states:uut.minute1
HEX3[4] << switch_states:uut.minute1
HEX3[5] << switch_states:uut.minute1
HEX3[6] << switch_states:uut.minute1
HEX4[0] << switch_states:uut.hour1
HEX4[1] << switch_states:uut.hour1
HEX4[2] << switch_states:uut.hour1
HEX4[3] << switch_states:uut.hour1
HEX4[4] << switch_states:uut.hour1
HEX4[5] << switch_states:uut.hour1
HEX4[6] << switch_states:uut.hour1
HEX5[0] << switch_states:uut.hour1
HEX5[1] << switch_states:uut.hour1
HEX5[2] << switch_states:uut.hour1
HEX5[3] << switch_states:uut.hour1
HEX5[4] << switch_states:uut.hour1
HEX5[5] << switch_states:uut.hour1
HEX5[6] << switch_states:uut.hour1


|interface_for_switch_states|switch_states:uut
clk => clk.IN3
switch => count[0].CLK
switch => count[1].CLK
add => operator.DATAB
add => operator.DATAB
add => operator.DATAB
deduct => operator.DATAB
deduct => operator.DATAB
deduct => operator.DATAB
hour1[0] <= hour_counter:hour.seg
hour1[1] <= hour_counter:hour.seg
hour1[2] <= hour_counter:hour.seg
hour1[3] <= hour_counter:hour.seg
hour1[4] <= hour_counter:hour.seg
hour1[5] <= hour_counter:hour.seg
hour1[6] <= hour_counter:hour.seg
hour1[7] <= hour_counter:hour.seg
hour1[8] <= hour_counter:hour.seg
hour1[9] <= hour_counter:hour.seg
hour1[10] <= hour_counter:hour.seg
hour1[11] <= hour_counter:hour.seg
hour1[12] <= hour_counter:hour.seg
hour1[13] <= hour_counter:hour.seg
minute1[0] <= minute_counter:minute.seg
minute1[1] <= minute_counter:minute.seg
minute1[2] <= minute_counter:minute.seg
minute1[3] <= minute_counter:minute.seg
minute1[4] <= minute_counter:minute.seg
minute1[5] <= minute_counter:minute.seg
minute1[6] <= minute_counter:minute.seg
minute1[7] <= minute_counter:minute.seg
minute1[8] <= minute_counter:minute.seg
minute1[9] <= minute_counter:minute.seg
minute1[10] <= minute_counter:minute.seg
minute1[11] <= minute_counter:minute.seg
minute1[12] <= minute_counter:minute.seg
minute1[13] <= minute_counter:minute.seg
second1[0] <= seccond_counter:second.seg
second1[1] <= seccond_counter:second.seg
second1[2] <= seccond_counter:second.seg
second1[3] <= seccond_counter:second.seg
second1[4] <= seccond_counter:second.seg
second1[5] <= seccond_counter:second.seg
second1[6] <= seccond_counter:second.seg
second1[7] <= seccond_counter:second.seg
second1[8] <= seccond_counter:second.seg
second1[9] <= seccond_counter:second.seg
second1[10] <= seccond_counter:second.seg
second1[11] <= seccond_counter:second.seg
second1[12] <= seccond_counter:second.seg
second1[13] <= seccond_counter:second.seg


|interface_for_switch_states|switch_states:uut|seccond_counter:second
clk => e2.CLK
clk => e.CLK
clk => count_down[0].CLK
clk => count_down[1].CLK
clk => count_down[2].CLK
clk => count_down[3].CLK
clk => count_down[4].CLK
clk => count_down[5].CLK
clk => count_down[6].CLK
clk => count_down[7].CLK
clk => count_down[8].CLK
clk => count_down[9].CLK
clk => count_down[10].CLK
clk => count_down[11].CLK
clk => count_down[12].CLK
clk => count_down[13].CLK
clk => count_down[14].CLK
clk => count_down[15].CLK
clk => count_down[16].CLK
clk => count_down[17].CLK
clk => count_down[18].CLK
clk => count_down[19].CLK
clk => count_down[20].CLK
clk => count_down[21].CLK
clk => count_down[22].CLK
clk => count_down[23].CLK
clk => count_down[24].CLK
clk => count_down[25].CLK
clk => count_down[26].CLK
clk => count_down[27].CLK
clk => second[0].CLK
clk => second[1].CLK
clk => second[2].CLK
clk => second[3].CLK
clk => second[4].CLK
clk => second[5].CLK
clk => e3.CLK
mode => always2.IN1
mode => always2.IN1
mode => always2.IN0
add => always2.IN1
add => always2.IN1
add => always2.IN1
deduct => always2.IN1
deduct => e2.OUTPUTSELECT
deduct => second.OUTPUTSELECT
deduct => second.OUTPUTSELECT
deduct => second.OUTPUTSELECT
deduct => second.OUTPUTSELECT
deduct => second.OUTPUTSELECT
deduct => second.OUTPUTSELECT
seg[0] <= led7_decoder:hex0.port1
seg[1] <= led7_decoder:hex0.port1
seg[2] <= led7_decoder:hex0.port1
seg[3] <= led7_decoder:hex0.port1
seg[4] <= led7_decoder:hex0.port1
seg[5] <= led7_decoder:hex0.port1
seg[6] <= led7_decoder:hex0.port1
seg[7] <= led7_decoder:hex1.port1
seg[8] <= led7_decoder:hex1.port1
seg[9] <= led7_decoder:hex1.port1
seg[10] <= led7_decoder:hex1.port1
seg[11] <= led7_decoder:hex1.port1
seg[12] <= led7_decoder:hex1.port1
seg[13] <= led7_decoder:hex1.port1
trigger <= trigger.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|seccond_counter:second|bin_to_bcd4:uut
a[0] => Mod0.IN9
a[0] => Div0.IN9
a[1] => Mod0.IN8
a[1] => Div0.IN8
a[2] => Mod0.IN7
a[2] => Div0.IN7
a[3] => Mod0.IN6
a[3] => Div0.IN6
a[4] => Mod0.IN5
a[4] => Div0.IN5
a[5] => Mod0.IN4
a[5] => Div0.IN4
c[0] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[1] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[2] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[3] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|seccond_counter:second|led7_decoder:hex0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN0
in[1] => seg.IN0
in[1] => seg.IN1
in[1] => seg.IN0
in[2] => seg.IN1
in[2] => seg.IN1
in[2] => seg.IN0
in[2] => seg.IN1
in[3] => seg.IN1
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|seccond_counter:second|led7_decoder:hex1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN0
in[1] => seg.IN0
in[1] => seg.IN1
in[1] => seg.IN0
in[2] => seg.IN1
in[2] => seg.IN1
in[2] => seg.IN0
in[2] => seg.IN1
in[3] => seg.IN1
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|minute_counter:minute
clk => e2.CLK
clk => e.CLK
clk => minute[0].CLK
clk => minute[1].CLK
clk => minute[2].CLK
clk => minute[3].CLK
clk => minute[4].CLK
clk => minute[5].CLK
clk => en.CLK
clk => e3.CLK
second => always2.IN1
second => en.OUTPUTSELECT
second => minute.OUTPUTSELECT
second => minute.OUTPUTSELECT
second => minute.OUTPUTSELECT
second => minute.OUTPUTSELECT
second => minute.OUTPUTSELECT
second => minute.OUTPUTSELECT
second => e3.OUTPUTSELECT
mode => minute.OUTPUTSELECT
mode => minute.OUTPUTSELECT
mode => minute.OUTPUTSELECT
mode => minute.OUTPUTSELECT
mode => minute.OUTPUTSELECT
mode => minute.OUTPUTSELECT
mode => e.ENA
mode => e2.ENA
mode => en.ENA
mode => e3.ENA
add => always2.IN1
add => always2.IN1
deduct => always2.IN1
deduct => e2.OUTPUTSELECT
deduct => minute.OUTPUTSELECT
deduct => minute.OUTPUTSELECT
deduct => minute.OUTPUTSELECT
deduct => minute.OUTPUTSELECT
deduct => minute.OUTPUTSELECT
deduct => minute.OUTPUTSELECT
seg[0] <= led7_decoder:hex0.port1
seg[1] <= led7_decoder:hex0.port1
seg[2] <= led7_decoder:hex0.port1
seg[3] <= led7_decoder:hex0.port1
seg[4] <= led7_decoder:hex0.port1
seg[5] <= led7_decoder:hex0.port1
seg[6] <= led7_decoder:hex0.port1
seg[7] <= led7_decoder:hex1.port1
seg[8] <= led7_decoder:hex1.port1
seg[9] <= led7_decoder:hex1.port1
seg[10] <= led7_decoder:hex1.port1
seg[11] <= led7_decoder:hex1.port1
seg[12] <= led7_decoder:hex1.port1
seg[13] <= led7_decoder:hex1.port1
trigger <= trigger.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|minute_counter:minute|bin_to_bcd4:uut
a[0] => Mod0.IN9
a[0] => Div0.IN9
a[1] => Mod0.IN8
a[1] => Div0.IN8
a[2] => Mod0.IN7
a[2] => Div0.IN7
a[3] => Mod0.IN6
a[3] => Div0.IN6
a[4] => Mod0.IN5
a[4] => Div0.IN5
a[5] => Mod0.IN4
a[5] => Div0.IN4
c[0] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[1] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[2] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[3] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|minute_counter:minute|led7_decoder:hex0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN0
in[1] => seg.IN0
in[1] => seg.IN1
in[1] => seg.IN0
in[2] => seg.IN1
in[2] => seg.IN1
in[2] => seg.IN0
in[2] => seg.IN1
in[3] => seg.IN1
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|minute_counter:minute|led7_decoder:hex1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN0
in[1] => seg.IN0
in[1] => seg.IN1
in[1] => seg.IN0
in[2] => seg.IN1
in[2] => seg.IN1
in[2] => seg.IN0
in[2] => seg.IN1
in[3] => seg.IN1
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|hour_counter:hour
clk => e2.CLK
clk => e.CLK
clk => hour[0].CLK
clk => hour[1].CLK
clk => hour[2].CLK
clk => hour[3].CLK
clk => hour[4].CLK
clk => hour[5].CLK
clk => en.CLK
minute => always2.IN1
minute => en.OUTPUTSELECT
minute => hour.OUTPUTSELECT
minute => hour.OUTPUTSELECT
minute => hour.OUTPUTSELECT
minute => hour.OUTPUTSELECT
minute => hour.OUTPUTSELECT
minute => hour.OUTPUTSELECT
mode => hour.OUTPUTSELECT
mode => hour.OUTPUTSELECT
mode => hour.OUTPUTSELECT
mode => hour.OUTPUTSELECT
mode => hour.OUTPUTSELECT
mode => hour.OUTPUTSELECT
mode => e.ENA
mode => e2.ENA
mode => en.ENA
add => always2.IN1
add => always2.IN1
deduct => always2.IN1
deduct => e2.OUTPUTSELECT
deduct => hour.OUTPUTSELECT
deduct => hour.OUTPUTSELECT
deduct => hour.OUTPUTSELECT
deduct => hour.OUTPUTSELECT
deduct => hour.OUTPUTSELECT
deduct => hour.OUTPUTSELECT
seg[0] <= led7_decoder:hex0.port1
seg[1] <= led7_decoder:hex0.port1
seg[2] <= led7_decoder:hex0.port1
seg[3] <= led7_decoder:hex0.port1
seg[4] <= led7_decoder:hex0.port1
seg[5] <= led7_decoder:hex0.port1
seg[6] <= led7_decoder:hex0.port1
seg[7] <= led7_decoder:hex1.port1
seg[8] <= led7_decoder:hex1.port1
seg[9] <= led7_decoder:hex1.port1
seg[10] <= led7_decoder:hex1.port1
seg[11] <= led7_decoder:hex1.port1
seg[12] <= led7_decoder:hex1.port1
seg[13] <= led7_decoder:hex1.port1


|interface_for_switch_states|switch_states:uut|hour_counter:hour|bin_to_bcd4:uut
a[0] => Mod0.IN9
a[0] => Div0.IN9
a[1] => Mod0.IN8
a[1] => Div0.IN8
a[2] => Mod0.IN7
a[2] => Div0.IN7
a[3] => Mod0.IN6
a[3] => Div0.IN6
a[4] => Mod0.IN5
a[4] => Div0.IN5
a[5] => Mod0.IN4
a[5] => Div0.IN4
c[0] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[1] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[2] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[3] <= Mod0.DB_MAX_OUTPUT_PORT_TYPE
c[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
c[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|hour_counter:hour|led7_decoder:hex0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN0
in[1] => seg.IN0
in[1] => seg.IN1
in[1] => seg.IN0
in[2] => seg.IN1
in[2] => seg.IN1
in[2] => seg.IN0
in[2] => seg.IN1
in[3] => seg.IN1
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|interface_for_switch_states|switch_states:uut|hour_counter:hour|led7_decoder:hex1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN0
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[0] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN1
in[1] => seg.IN0
in[1] => seg.IN0
in[1] => seg.IN1
in[1] => seg.IN0
in[2] => seg.IN1
in[2] => seg.IN1
in[2] => seg.IN0
in[2] => seg.IN1
in[3] => seg.IN1
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE


