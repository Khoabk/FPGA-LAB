// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.1.0 Build 196 10/24/2016 SJ Lite Edition"

// DATE "09/17/2021 21:19:47"

// 
// Device: Altera EP4CGX150DF31C7 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sillyfunction (
	x,
	y,
	s,
	m);
input 	x;
input 	y;
input 	s;
output 	m;

// Design Ports Information
// m	=>  Location: PIN_AF19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y	=>  Location: PIN_AE19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x	=>  Location: PIN_AG18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// s	=>  Location: PIN_AH19,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("my_first_fpga_top_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \m~output_o ;
wire \s~input_o ;
wire \x~input_o ;
wire \y~input_o ;
wire \m~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X75_Y0_N2
cycloneiv_io_obuf \m~output (
	.i(\m~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\m~output_o ),
	.obar());
// synopsys translate_off
defparam \m~output .bus_hold = "false";
defparam \m~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X75_Y0_N8
cycloneiv_io_ibuf \s~input (
	.i(s),
	.ibar(gnd),
	.o(\s~input_o ));
// synopsys translate_off
defparam \s~input .bus_hold = "false";
defparam \s~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X75_Y0_N15
cycloneiv_io_ibuf \x~input (
	.i(x),
	.ibar(gnd),
	.o(\x~input_o ));
// synopsys translate_off
defparam \x~input .bus_hold = "false";
defparam \x~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X75_Y0_N22
cycloneiv_io_ibuf \y~input (
	.i(y),
	.ibar(gnd),
	.o(\y~input_o ));
// synopsys translate_off
defparam \y~input .bus_hold = "false";
defparam \y~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X75_Y1_N24
cycloneiv_lcell_comb \m~0 (
// Equation(s):
// \m~0_combout  = (\s~input_o  & ((\y~input_o ))) # (!\s~input_o  & (\x~input_o ))

	.dataa(\s~input_o ),
	.datab(\x~input_o ),
	.datac(gnd),
	.datad(\y~input_o ),
	.cin(gnd),
	.combout(\m~0_combout ),
	.cout());
// synopsys translate_off
defparam \m~0 .lut_mask = 16'hEE44;
defparam \m~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign m = \m~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_NCEO~	=>  Location: PIN_AE7,	 I/O Standard: 2.5 V,	 Current Strength: 16mA
// ~ALTERA_DATA0~	=>  Location: PIN_A3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_G9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_NCSO~	=>  Location: PIN_B4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_B3,	 I/O Standard: 2.5 V,	 Current Strength: Default

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_NCSO~~padout ;
wire \~ALTERA_DATA0~~ibuf_o ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_NCSO~~ibuf_o ;


endmodule
